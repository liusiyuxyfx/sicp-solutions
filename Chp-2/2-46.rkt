#lang planet neil/sicp
(define (make-vect x y) (cons x y))
(define (xcor-vect vect) (car vect))
(define (ycor-vect vect) (cdr vect))
(define (add-vect vect1 vect2)
  (make-vect (+ (xcor-vect vect1)
                (xcor-vect vect2))
             (+ (ycor-vect vect1)
                (ycor-vect vect2))))
(define (sub-vect vect1 vect2)
  (make-vect (- (xcor-vect vect1)
                (xcor-vect vect2))
             (- (ycor-vect vect1)
                (ycor-vect vect2))))
(define (scale-vect vect s)
  (make-vect (* (xcor-vect vect) s)
             (* (ycor-vect vect) s)))

(define vect1 (make-vect 2 3))
(define vect2 (make-vect 3 4))
(newline)
(display (add-vect vect1 vect2))
(newline)
(display (sub-vect vect1 vect2))
(newline)
(display (scale-vect vect1 5))