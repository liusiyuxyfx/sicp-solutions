(define (delay ms)
	(let ((t (+ clock ms)))
		(while (< clock t))))

(define (sin x)
	(if (< (abs x) 0.001)
		x
		(let ((s (sin (/ x 3))))
			(- (* 3 s) (* 4 s s s)))))

(define (cos x) (sin (+ x 1.5708)))

(define (tan x) (/ (sin x) (cos x)))

(define (fib x)
	(if (< x 1.5)
		1
		(+ (fib (- x 1))
		   (fib (- x 2)))))

(while (< clock 5000) (print clock) (delay 1000))

(let ((x 0))
	(while (< x 10)
		(print x (sin x) (cos x) (tan x))
		(set x (+ x 0.05))))

(let ((i 0))
	(while (< i 30)
		(print i (fib i))
		(set i (+ i 1))))
