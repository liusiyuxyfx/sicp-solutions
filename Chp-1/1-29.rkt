#lang sicp
(define (cube x) (* x x x))
(define (sum term a next b)
  (if (> a b)
      0
      (+ (term a)
         (sum term (next a) next b))))
(define (simpson-integral f a b n)
  (define h (/ (- b a) n))
  (define (yk k) (+ a (* k h)))
  (define (count k)
    (* (cond ((or (= k 0) (= k n)))
             ((odd? k) 4)
             (else 2))
       (yk k)))
  (define (inc x) (+ x 1))
  (* (/ h 3) (sum cube 0 inc n)))