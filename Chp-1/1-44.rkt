#lang sicp
(define (compose f g)
  (lambda (x) (f (g x))))
(define (square x) (* x x))
(define (inc x) (+ x 1))
(define (repeated f cnt)
  (cond ((= cnt 0) (lambda (x) x))
         (else (compose f (repeated f (- cnt 1))))))
(define dx 0.00001)
(define (smooth f)
  (lambda (x)
    (/ (+ (f (- x dx))
          (f x)
          (f (+ x dx)))
       3)))
(define (nsmooth f n)
  ((repeated smooth n) f))